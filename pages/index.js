import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import prisma from '../lib/prisma';
// import Navbar from '../components/Navbar';


const quiz = {
  name: 'Steven\'s first quiz',
  questions: [
    {
      id: 1,
      question: 'what color is the sky',
      // answers: [
      //   { correct: true, answer: 'blue' },
      //   { correct: false, answer: 'red' },
      //   { correct: false, answer: 'green' },
      //   { correct: false, answer: 'purple' },
      // ]
    }
  ],
  answers: {
    '1':  [
      { correct: true, answer: 'blue' },
      { correct: false, answer: 'red' },
      { correct: false, answer: 'green' },
      { correct: false, answer: 'purple' },
    ]
  },
  // QQUESTION
  "id": 1,
  "question": "How to delete a directory in Linux?",
  "description": "delete folder",
  "answers": {
    "answer_a": "ls",
    "answer_b": "delete",
    "answer_c": "remove",
    "answer_d": "rmdir",
    "answer_e": null,
    "answer_f": null
  },
  "multiple_correct_answers": "false",
  "correct_answers": {
    "answer_a_correct": "false",
    "answer_b_correct": "false",
    "answer_c_correct": "false",
    "answer_d_correct": "true",
    "answer_e_correct": "false",
    "answer_f_correct": "false"
  },
  "explanation": "rmdir deletes an empty directory",
  "tip": null,
  "tags": [],
  "category": "linux",
  "difficulty": "Easy"
}




function Home({ feed }) {
  console.log(feed, ' in home')
  return (
    <div className={styles.container}>
      {/* <Navbar /> */}
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1 className="text-3xl font-bold underline bg-red-100">
        Hello world! FROM TAILWIND!
      </h1>

      {feed.map(item => {
        return (
          <div key={item.id} className="bg-yellow-100 p-4">
            <p>Created by: {item.author.name} - Contact {item.author.email}</p>

            
            <p>{item.title}</p>
            <p>{item.content}</p>
          </div>
        )
      })}

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getServerSideProps = async () => {
  const feed = await prisma.post.findMany({
    where: { published: true },
    include: {
      author: {
        select: { name: true, email: true },
      },
    },
  });
  return {
    props: { feed },
    // revalidate: 10,
  };
};

export default Home;